<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.bpwizard.openshift</groupId>
	<artifactId>openshift-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>openshift-demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR1</spring-cloud.version>
		<spring-cloud-kubernetes.version>1.1.1.RELEASE</spring-cloud-kubernetes.version>
		<openjdk18-openshift.version>1.3</openjdk18-openshift.version>
        <fabric8-maven-plugin.version>4.3.1</fabric8-maven-plugin.version>         
	    <fabric8.openshift.trimImageInContainerSpec>true</fabric8.openshift.trimImageInContainerSpec>
	    <fabric8.skip.build.pom>true</fabric8.skip.build.pom>	
	    <fabric8.generator.from>
	      registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
	    </fabric8.generator.from>
		<opentracing-spring-jaeger-cloud.version>2.0.3</opentracing-spring-jaeger-cloud.version>
	</properties>

	<dependencies>
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		 <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- Needed for Async Logging with Log4j 2 -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
	      <groupId>org.springframework.cloud</groupId>
	      <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
	    </dependency>
		<!-- Tracing -->
		<dependency>
		  <groupId>io.opentracing.contrib</groupId>
		  <artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>
		  <version>${opentracing-spring-jaeger-cloud.version}</version>
		</dependency>
		<!-- monitoring -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- Micormeter core dependecy  -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-core</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-kubernetes-dependencies</artifactId>
				<version>${spring-cloud-kubernetes.version}</version>
				<type>pom</type>
				<scope>import</scope>
			  </dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
	            <groupId>io.fabric8</groupId>
	            <artifactId>fabric8-maven-plugin</artifactId>
	            <version>${fabric8-maven-plugin.version}</version>
	            <configuration>
	                <namespace>wcm-bpm</namespace>
	                <!-- <buildRecreate>is</buildRecreate> -->
	                <mode>openshift</mode>
	                <enricher>
	                  <config>
	                    ​<f8-healthcheck-spring-boot>
			               ​<timeoutSeconds>5</timeoutSeconds>
			               ​<readinessProbeInitialDelaySeconds>30</readinessProbeInitialDelaySeconds>
			               <livenessProbeInitialDelaySeconds>30</livenessProbeInitialDelaySeconds>
			               ​<failureThreshold>3</failureThreshold>
			               ​<successThreshold>1</successThreshold>
			             ​</f8-healthcheck-spring-boot>
	                  </config>
	                </enricher>
	                <imagePullPolicy>IfNotPresent</imagePullPolicy>
	                <!-- 
	                <images>
	                  <image>
	                    <name>openshift-demo:0.1</name>
	                    <alias>openshift-demo</alias>
	                    <registry>image-registry.openshift-image-registry.svc:5000</registry>
	                  </image>
	                </images>
	                 -->    				
	            </configuration>
	            <executions>
	              <execution>
	                <id>fmp</id>
	                <goals>
	                  <goal>resource</goal>
	                  <goal>build</goal>
	                </goals>
	              </execution>
	            </executions>
	          </plugin>
	          
		</plugins>
	</build>

</project>
