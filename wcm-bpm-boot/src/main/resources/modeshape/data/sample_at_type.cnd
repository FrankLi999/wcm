<bpw_at = 'http://www.bpwizard.com/bpw/at/1.0'>

[bpw_at:design_content1_ElementFolder]  > nt:folder orderable
- elemt1 (STRING) 
- elemt2 (STRING) 
- elemt3 (STRING) 
- * (STRING)

[bpw_at:design_content1_PropertyFolder]  > nt:folder orderable
- prop1 (STRING)
- prop2 (STRING)
- prop3 (STRING)
- * (STRING)

/*
    NodeTypeTemplate:
		nodeType.setName: name: bpw:content1
		nodeType.setDeclaredSuperTypeNames(names(supertypes)); [bpw:workflowNode]
		
		nodeType.setAbstract(false);
		nodeType.setMixin(false);
		nodeType.setOrderableChildNodes(true);
		nodeType.setQueryable(true);
		
		nodeType.setPrimaryItemName(string(primaryItem));
		
	PropertyDefinitionTemplate
		propDefn.setName(bpw:authoringTemplate);
		propDefn.setRequiredType(int jcrType);  javax.jcr.PropertyType.STRING
		
		        boolean autoCreated = false;
				boolean mandatory = false;
				boolean isProtected = false;
				boolean multiple = false;
				boolean isFullTextSearchable = true;
				boolean isQueryOrderable = true;
				String onParentVersion = "COPY";  -- javax.jcr.version.COPY
				
				
				propDefn.setAutoCreated(autoCreated);
				propDefn.setMandatory(mandatory);
				propDefn.setProtected(isProtected);
				propDefn.setOnParentVersion(OnParentVersionAction.valueFromName(onParentVersion.toUpperCase(Locale.ROOT)));
				propDefn.setMultiple(multiple);
				propDefn.setFullTextSearchable(isFullTextSearchable);
				propDefn.setQueryOrderable(isQueryOrderable);
				
		nodeType.getPropertyDefinitionTemplates().add(propDefn);
	
	    Property types:
		   "STRING",
		   "BINARY", "LONG", "DOUBLE",
		   "BOOLEAN", "DATE", "NAME",
		   "PATH", "REFERENCE",
		   "WEAKREFERENCE",
		   "SIMPLEREFERENCE",
		   "DECIMAL", "URI", "UNDEFINED",
		   "*", "?")
	Child node types:
		childDefn.setName(string(name));
		childDefn.setRequiredPrimaryTypeNames(names(requiredTypes)); [bpw:contentElementFolder]
		childDefn.setDefaultPrimaryTypeName(string(defaultType) - optional  =
      
		        childDefn.setAutoCreated(autoCreated);
        childDefn.setMandatory(mandatory);
        childDefn.setProtected(isProtected);
        childDefn.setOnParentVersion(javax.jcr.version.OnParentVersionAction.COPY);
        childDefn.setSameNameSiblings(sns); //SameNameSiblings
		
        parseNodeAttributes(tokens, childDefn, nodeType);

        boolean autoCreated = false;
        boolean mandatory = false;
        boolean isProtected = false;
        boolean sns = false;
        String onParentVersion = "COPY";

	org.modeshape.jcr.JcrNodeTypeManager impl implements NodeTypeManager {
		public NodeTypeIterator registerNodeTypes( Collection<NodeTypeDefinition> templates,
                                               boolean allowUpdates )
			session.checkLive();	
			try {
            session.checkWorkspacePermission(session.workspaceName(), ModeShapePermissions.REGISTER_TYPE);
			} catch (AccessControlException ace) {
				throw new AccessDeniedException(ace);
			}
			List<JcrNodeType> jcrNodeTypes = repositoryTypeManager.registerNodeTypes(templates, !allowUpdates, false, true);
			this.schemata = null; //clear the cached schemata to make sure it is reloaded
			return new JcrNodeTypeIterator(jcrNodeTypes);
		
*/
[bpw_at:content1] > bpw:workflowNode orderable
- bpw_at:authoringTemplate (STRING)
- bpw_at:categories (STRING) multiple
+ elements (bpw_at:design_content1_ElementFolder)
+ properties (bpw_at:design_content1_PropertyFolder)
+ comments (bpw_at:design_content1_commentFolder)