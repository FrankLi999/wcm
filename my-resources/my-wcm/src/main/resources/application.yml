myservice:
  message: Hello config
server:
  port: 9010
image:
  default: https://static.productionready.io/images/smiley-cyrus.jpg
jwt:
  secret: nRvyYC4soFxBdZ-F-5Nnzz5USXstR1YylsTd-mA0aKtI9HUlriGrtkf-TiuDapkLiUCogO3JOK7kwZisrHp6wA
  sessionTime: 86400
# Actuator / Management
management:
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: "*"
logging:
  level:
    root: INFO
    com.bpwizard: DEBUG
    org.springframework: INFO
    org.springframework.web: DEBUG
    org.springframework.security: INFO
    org.springframework.context.annotation: TRACE
    org.springframework.boot.autoconfigure: DEBUG
    io.netty: DEBUG
    io.reactor: DEBUG
    org.hibernate.SQL: debug
eureka:  
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_URL:http://user:password@localhost:8761}/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
      
ribbon:
  eureka:
    enabled: true                  
spring:
  application:
    name: resource-service
  profiles.active: production
  session:
    store-type: redis
  #cloud: 
    #gateway:
      #discovery:
        #locator:
          #enabled: true
      #routes:
      #- id: my-service
        #uri: lb://my-service
        #predicates:
        #- Path=/resource/**
        #filters:
        #- RewritePath=/api/(?<path>.*), /$\{path}
        #- SaveSession
      #- id: mainCss         
         #uri: lb://my-service
         #predicates:         
         #- Path=/main.css 
      #- id: customer-service
      #  uri: lb://customer-service
      #  predicates:
      #  - Path=/customer/**
      #  filters:
      #  - RewritePath=/customer/(?<path>.*), /$\{path}
    #stream: 
      #bindings: 
        #input: 
          #destination: my-comments 
          #group: comments-service 
          #content-type: application/json 
        #output: 
          #destination: my-chat 
          #group: comments-chat 
          #content-type: application/json 
  jackson:
    deserialization:
      UNWRAP_ROOT_VALUE: true
  redis:
    port: 6379
    embedded: true
  #datasource:
    #url: jdbc:h2:mem:customerdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    #username: sa
    #password:
    #driver-class-name: org.h2.Driver
    #platform: h2
  #h2:
    #console:
      #enabled: true
      #path: /h2-console
  jpa:
    hibernate:
      ddl-auto: none
  data:
    mongodb:
      database: demo
      #host: 192.168.99.100
      #port: 27017
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 108535420758-d5dkg6aejtuv7j523qmcu1025q3fcaft.apps.googleusercontent.com
            client-secret: T2-nmQq6RoMO4QFVyOIF1aAp
          github:
            client-id: 1f9824d889fc63e9e97a
            client-secret: 78c73961f61eb28a22f41ff5b5313324415ee4c4
          facebook:
            client-id: your-app-client-id
            client-secret: your-app-client-secret
          okta:
            client-id: 0oaeszrc1wEt3A0iC0h7
            client-secret: lJYdP4VtR7Das3k_hzUOiat-4_SJGGNy-Y-I9Ow7
            clientName: Okta
            authorization-grant-type: authorization_code
            redirectUriTemplate: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
          keycloak:
            client-id: login-app
            client-secret: e12557ee-30bf-4c7d-968c-4e4ac45b89de
            clientName: login-app
            authorization-grant-type: authorization_code
            redirectUriTemplate: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email

        provider:
          okta:
            authorization-uri: https://dev-727816.oktapreview.com/oauth2/v1/authorize
            token-uri: https://dev-727816.oktapreview.com/oauth2/v1/token
            user-info-uri: https://dev-727816.oktapreview.com/oauth2/v1/userinfo
            jwk-set-uri: https://dev-727816.oktapreview.com/oauth2/v1/keys
            user-name-attribute: sub
          keycloak:
            authorization-uri: http://localhost:8180/auth/realms/SpringBootKeycloak/protocol/openid-connect/auth
            token-uri: http://localhost:8180/auth/realms/SpringBootKeycloak/protocol/openid-connect/token
            user-info-uri: http://localhost:8180/auth/realms/SpringBootKeycloak/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8180/auth/realms/SpringBootKeycloak/protocol/openid-connect/certs
            user-name-attribute: preferred_username
