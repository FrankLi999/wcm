<?xml version="1.0" encoding="UTF-8"?>
<project name="camunda-bpm-elasticsearch" default="deploy">
	<property name="skipTests" value="true" />
  <condition property="isLinux">
    <os family="unix" />
  </condition>

  <condition property="isOSX">
    <os family="mac" />
  </condition>

  <condition property="mvn.executable" value="mvn.bat" else="mvn">
    <os family="windows"/>
  </condition>

  <condition property="archive.type" value="zip" else="tar.gz">
    <os family="windows"/>
  </condition>

  <target name="init.properties.osx" if="isOSX">
    <property name="kibana.file" value="darwin-x64" />
  </target>

  <target name="init.properties.linux" if="isLinux">
    <property name="kibana.file" value="linux-x64" />
  </target>

  <target name="init.properties.windows">
    <property name="kibana.file" value="windows" />
  </target>

  <target name="init.properties" depends="init.properties.osx, init.properties.linux,init.properties.windows" />

  <property name="version.camunda-bpm" value="7.2.0" />
  <property name="version.tomcat" value="7.0.50" />
  <property name="version.jboss" value="7.2.0.Final" />
  <property name="version.elasticsearch" value="1.4.4" />
  <property name="version.kibana" value="4.0.0" />
  <property name="elasticsearch.dir" value="elasticsearch-${version.elasticsearch}" />
  <property name="elasticsearch.file" value="${elasticsearch.dir}.${archive.type}" />
  <property name="elasticsearch.url" value="https://download.elasticsearch.org/elasticsearch/elasticsearch/${elasticsearch.file}" />

  <!-- logstash download https://download.elasticsearch.org/logstash/logstash/logstash-1.4.0.zip -->
  <property name="kibana.url" value="https://download.elasticsearch.org/kibana/kibana/kibana-${version.kibana}-${kibana.file}.${archive.type}" />

  <property name="distro" value="tomcat" /> <!-- jboss or tomcat -->
  <property name="distro.dir" value="camunda-${distro}" />
  <property name="distro.file" value="camunda-bpm-${distro}-${version.camunda-bpm}.tar.gz" />
  <property name="distro.url" value="http://camunda.org/release/camunda-bpm/${distro}/7.2/${distro.file}" />

  <property name="deploy.dir" value="${basedir}/distro" />
  <!--<property name="deploy.jboss.dir" value="/home/hawky4s/projects/own/camunda-jboss/server/jboss-as-7.2.0.Final" />-->

  <condition property="server.dir" value="server/jboss-as-${version.jboss}" else="server/apache-tomcat-${version.tomcat}">
    <equals arg1="${distro}" arg2="jboss" casesensitive="false" forcestring="true" trim="true" />
  </condition>

  <condition property="is.jboss">
    <equals arg1="${distro}" arg2="jboss" casesensitive="false" forcestring="true" trim="true" />
  </condition>

  <target name="init">
    <mkdir dir="${deploy.dir}" />
  </target>

	<target name="package.mvn">
    <exec executable="${mvn.executable}" dir="${basedir}" failonerror="true">
      <env key="MAVEN_OPTS" value="-Xmx1024m -Xms512m"/>
      <arg line="clean package -DskipTests=${skipTests}" />
    </exec>
	</target>


  <!--========================== camunda-bpm-related ==========================-->
  <target name="download.distro">
    <get src="${distro.url}" dest="${deploy.dir}/" verbose="false" skipexisting="true" />
  </target>

  <target name="unpack.distro" depends="download.distro">
    <mkdir dir="${deploy.dir}/${distro.dir}" />
    <untar src="${deploy.dir}/${distro.file}" dest="${deploy.dir}/${distro.dir}/" compression="gzip" overwrite="false" >
      <patternset>
        <include name="**/server/**/*" />
      </patternset>
    </untar>
  </target>

  <target name="deploy.jboss.distro" if="is.jboss" depends="package.mvn, unpack.distro">
      <copy todir="${deploy.dir}/${distro.dir}/${server.dir}" overwrite="true">
          <fileset dir="${basedir}/elasticsearch-jboss-module/target">
              <include name="modules/**/*" />
      <include name="standalone/**/*" />
          </fileset>
      </copy>
  </target>

  <target name="deploy.tomcat.distro" unless="is.jboss" depends="package.mvn, unpack.distro">
    <copy todir="${deploy.dir}/${distro.dir}/${server.dir}" overwrite="true">
      <fileset dir="${basedir}/elasticsearch-lib-module/target">
        <include name="lib/**/*" />
      </fileset>
    </copy>
  </target>

  <target name="deploy.camunda.distro" depends="deploy.jboss.distro, deploy.tomcat.distro" />


  <!--========================== elasticsearch-related ==========================-->
  <available file="${deploy.dir}/${elasticsearch.dir}" type="dir" property="es.exists" />

  <target name="download.elasticsearch" depends="init">
    <get src="${elasticsearch.url}" dest="${deploy.dir}/${elasticsearch.file}" verbose="true" skipexisting="true" />
  </target>

  <target name="unpack.elasticsearch.unix" if="linuxos">
    <untar src="${deploy.dir}/${elasticsearch.file}" dest="${deploy.dir}/" compression="gzip" overwrite="false" />
    <chmod file="${deploy.dir}/${elasticsearch.dir}/bin/**" perm="0755" type="both" />
  </target>

  <target name="unpack.elasticsearch.win" unless="linuxos">
    <unzip src="${deploy.dir}/${elasticsearch.file}" dest="${deploy.dir}/" overwrite="false" />
  </target>

  <target name="deploy.elasticsearch" unless="es.exists" depends="download.elasticsearch, unpack.elasticsearch.unix, unpack.elasticsearch.win" />
  <!--
    plugins:

    twitter:  bin/plugin -install elasticsearch/elasticsearch-river-twitter/1.4.0  - see https://github.com/elasticsearch/elasticsearch-river-twitter
    bigdesk:  bin/plugin -install lukas-vlcek/bigdesk - see bigdesk.org
    head:     bin/plugin -install mobz/elasticsearch-head - see https://github.com/mobz/elasticsearch-head
    inquisitor: bin/plugin -install polyfractal/elasticsearch-inquisitor - see https://github.com/polyfractal/elasticsearch-inquisitor / http://localhost:9200/_plugin/inquisitor/
  -->

  <!--========================== global aggregate goals ==========================-->
  <target name="deploy" depends="deploy.elasticsearch, deploy.camunda.distro" />

</project>