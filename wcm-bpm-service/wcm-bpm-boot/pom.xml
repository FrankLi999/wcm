<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <groupId>com.bpwizard.wcm-bpm</groupId>
	<artifactId>wcm-bpm-boot</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>wcm-bpm-boot</name>
	<description>Spring Boot Modeshape/Camunda</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- <version>2.2.0.M3</version> -->
		<version>2.1.6.RELEASE</version>
		<relativePath></relativePath>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<springfox.version>2.9.2</springfox.version>
		<modeshape.version>5.4.1.Final</modeshape.version>
		<atomikos.version>4.0.6</atomikos.version>
		<camunda.spring-boot.version>3.4.0-SNAPSHOT</camunda.spring-boot.version>
		<camunda.version>7.12.0-SNAPSHOT</camunda.version>
		<hazelcast.version>3.12.2</hazelcast.version>
		<hazelcast-jet.version>3.1</hazelcast-jet.version>
	</properties>
	<dependencyManagement>
		<dependencies>
		    <!-- 
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-spring</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			-->
			<!-- https://mvnrepository.com/artifact/com.hazelcast.jet/hazelcast-jet -->
			<dependency>
			    <groupId>com.hazelcast.jet</groupId>
			    <artifactId>hazelcast-jet</artifactId>
			    <version>${hazelcast-jet.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.hazelcast.jet/hazelcast-jet-spring -->
			<dependency>
			    <groupId>com.hazelcast.jet</groupId>
			    <artifactId>hazelcast-jet-spring</artifactId>
			    <version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.modeshape.bom</groupId>
				<artifactId>modeshape-bom-embedded</artifactId>
				<version>${modeshape.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.axonframework/axon-spring-boot-starter -->
		<!-- 
		<dependency>
		    <groupId>org.axonframework</groupId>
		    <artifactId>axon-spring-boot-starter</artifactId>
		    <version>4.2</version>
		    <exclusions>
				<exclusion>
					<groupId>org.axonframework</groupId>
					<artifactId>axon-server-connector</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		-->
		
        <dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter</artifactId>
			<version>${camunda.spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bpwizard.wcm</groupId>
			<artifactId>camunda-rest-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bpwizard.wcm</groupId>
			<artifactId>camunda-db-identity-plugin</artifactId>
			<version>${project.version}</version>
		</dependency>            
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		 -->
        <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
		<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>6.0.6</version>
            <scope>runtime</scope>
        </dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 
		<dependency>
		    <groupId>org.axonframework</groupId>
		    <artifactId>axon-test</artifactId>
		    <version>4.2</version>
		    <scope>test</scope>
		</dependency>
        -->
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<!-- 
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
        -->
		<dependency>
			<groupId>com.bpwizard.spring</groupId>
			<artifactId>spring-boot-commons-service</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
		    <groupId>com.bpwizard.wcm</groupId>
			<artifactId>modeshape-commons-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.bpwizard.wcm</groupId>
			<artifactId>modeshape-jcr-rest-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.bpwizard.wcm</groupId>
			<artifactId>modeshape-jcr-webdav-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<version>${atomikos.version}</version>
			<optional>true</optional>
		</dependency>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- Needed for Async Logging with Log4j 2 -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-tomcat</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
        
        
      
		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		
		<!-- modeshape dependencies -->
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-sequencer-images</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-persistence-relational</artifactId>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		   <groupId>org.flywaydb</groupId>
		   <artifactId>flyway-core</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		    <!-- default migration table: flyway_schema_history
		    6 Commands: info, migrate, baseline, validate, repair, clean
		    mvn clean flyway:migrate -Dflyway.configFile=flywayConfig.properties 
		    mvn flyway:info -Dflyway.configFile=flywayConfig.properties 
		    -->
		    <plugin>
			    <groupId>org.flywaydb</groupId>
			    <artifactId>flyway-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
        			<executable>true</executable>
    		    </configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
				<!-- Download redoc (enable it when building for production) -->
        	        <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://rebilly.github.io/ReDoc/releases/latest/redoc.min.js</url>
                            <outputFileName>redoc.min.js</outputFileName>
                            <outputDirectory>${project.basedir}/src/main/resources/public/redoc</outputDirectory>
                        </configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
				    <!-- copy webui dist folder to src/resource/webui -->
                    <execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
                            <outputDirectory>${project.build.outputDirectory}/webui</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/webui/dist</directory>
                                    <excludes>
                	                    <exclude>*.gz</exclude>
            			            </excludes>
                                </resource>
                            </resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <!--
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.14.2</version>
				<configuration>
				  <images>
					<image>
					  <name>${docker.image}</name>
					  <build>
						<from>anapsix/alpine-java:8</from>
						<volumes>
						  <volume>/tmp</volume>
						</volumes>
						<entryPoint>
						  <exec>
							<arg>java</arg>
							<arg>-jar</arg>
							<arg>/maven/demo.jar</arg>
						  </exec>
						</entryPoint>
						<assembly>
						  <descriptor>assembly.xml</descriptor>
						</assembly>
					  </build>
					</image>
				  </images>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>
	<repositories>
		<repository>
			<snapshots />
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<snapshots />
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
		</pluginRepository>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>
</project>
