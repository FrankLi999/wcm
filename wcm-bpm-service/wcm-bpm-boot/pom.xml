<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>wcm-bpm-boot</artifactId>
	<packaging>jar</packaging>
	<name>wcm-bpm-boot</name>
	<description>Spring Boot Modeshape/Camunda</description>

	<parent>
	    <groupId>com.bpwizard.wcm-bpm</groupId>
	    <artifactId>spring-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>
	<properties>
	    <!-- <jgroups.version>4.1.8.Final</jgroups.version>  -->
	    <jgroups.version>3.6.10.Final</jgroups.version>
	    <jgroups-raft.version>0.5.1.Final</jgroups-raft.version>
        <commons-cli.version>1.4</commons-cli.version>
        <fabric8-maven-plugin.version>3.5.40</fabric8-maven-plugin.version>
	    <fabric8.openshift.trimImageInContainerSpec>true</fabric8.openshift.trimImageInContainerSpec>
	    <fabric8.skip.build.pom>true</fabric8.skip.build.pom>
	    <fabric8.generator.from>
	      registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift:${openjdk18-openshift.version}
	    </fabric8.generator.from>
    </properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.axonframework/axon-spring-boot-starter -->
		<!-- 
		<dependency>
		    <groupId>org.axonframework</groupId>
		    <artifactId>axon-spring-boot-starter</artifactId>
		    <version>4.2</version>
		    <exclusions>
				<exclusion>
					<groupId>org.axonframework</groupId>
					<artifactId>axon-server-connector</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		-->
		<!-- 
        <dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter</artifactId>
			<version>${camunda.spring-boot.version}</version>
		</dependency>
		 -->
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
			<!-- <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId> -->
			<version>${camunda.spring-boot.version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
		
		<dependency>
		  <groupId>com.fasterxml.jackson.datatype</groupId>
		  <artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.camunda.spin</groupId>
		    <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.camunda.bpm</groupId>
		    <artifactId>camunda-engine-plugin-spin</artifactId>
		</dependency>
		
		<dependency>
	        <groupId>org.camunda.bpm.dmn</groupId>
	        <artifactId>camunda-engine-dmn</artifactId>
	    </dependency>
		<!-- 
		<dependency>
			<groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>camunda-rest-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		-->
		<dependency>
		    <groupId>com.hazelcast.jet</groupId>
		    <artifactId>hazelcast-jet</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.hazelcast.jet</groupId>
		    <artifactId>hazelcast-jet-spring</artifactId>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-hazelcast</artifactId>
		</dependency>
		-->
		<!-- 
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-hibernate52</artifactId>
		</dependency>
		 -->
		<!-- 
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-spring</artifactId>
			<scope>provided</scope>
		</dependency>
		 -->	
		<!-- 
		<dependency>
			<groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>camunda-db-identity-plugin</artifactId>
			<version>${project.version}</version>
		</dependency>
		-->            
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
			<version>${camunda.spring-boot.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>org.camunda.bpm.assert</groupId>
		  <artifactId>camunda-bpm-assert</artifactId>
		  <version>5.0.0</version>
		</dependency>

		<dependency>
		  <groupId>org.assertj</groupId>
		  <artifactId>assertj-core</artifactId>
		  <version>3.13.2</version>
		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert-scenario</artifactId>
			<version>0.2</version> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-process-test-coverage</artifactId>
			<version>0.3.2</version>
			<scope>test</scope>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		 -->
        <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
        <dependency>
			<groupId>com.bpwizard.spring</groupId>
			<artifactId>spring-boot-commons-service</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
		    <groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>modeshape-commons-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>modeshape-jcr-rest-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
         <dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <!-- <version>8.0.17</version>  -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<version>${atomikos.version}</version>
			<optional>true</optional>
		</dependency>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- Needed for Async Logging with Log4j 2 -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-tomcat</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		
		<!-- modeshape dependencies -->
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-sequencer-images</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-persistence-relational</artifactId>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!--
		<dependency>
		   <groupId>org.flywaydb</groupId>
		   <artifactId>flyway-core</artifactId>
		</dependency>
		-->
		<!-- Drool Spring boot integration -->
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-ci</artifactId>
            <version>${drools-version}</version>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-decisiontables</artifactId>
            <version>${drools-version}</version>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
            <version>${drools-version}</version>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
            <version>${drools-version}</version>
        </dependency>
        
        <!--spring integration -->
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-spring</artifactId>
            <version>${drools-version}</version>
        </dependency>
        
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.17</version> <!--  overwite the default v3.15 -->
		</dependency>

        <!-- 
		<dependency>
		    <groupId>org.camunda.bpm</groupId>
		    <artifactId>camunda-engine</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.camunda.bpm.model</groupId>
		    <artifactId>camunda-cmmn-model</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.camunda.bpm.model</groupId>
		    <artifactId>camunda-bpmn-model</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		</dependency>
		-->
		<dependency>
		    <groupId>com.github.ulisesbocchio</groupId>
		    <artifactId>jasypt-spring-boot-starter</artifactId>
		</dependency>
		<!-- 
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-configuration-processor</artifactId>
        	<optional>true</optional>
        </dependency>
        -->
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>${jgroups.version}</version>
        </dependency>
        <dependency>
		    <groupId>org.jgroups</groupId>
		    <artifactId>jgroups-raft</artifactId>
		    <version>${jgroups-raft.version}</version>
		</dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
	</dependencies>

	<build>
	    <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>
		<plugins>
		    <!-- default migration table: flyway_schema_history
		    6 Commands: info, migrate, baseline, validate, repair, clean
		    mvn clean flyway:migrate -Dflyway.configFile=flywayConfig.properties 
		    mvn flyway:info -Dflyway.configFile=flywayConfig.properties 
		    -->
		    <!--
		    <plugin>
			    <groupId>org.flywaydb</groupId>
			    <artifactId>flyway-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<!-- 
			<plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.5.1-1:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.18.0:exe:${os.detected.classifier}</pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
			<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
        			<executable>true</executable>
    		    </configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Download redoc (enable it when building for production) -->
 			<!--
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
				       	        <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://rebilly.github.io/ReDoc/releases/latest/redoc.min.js</url>
                            <outputFileName>redoc.min.js</outputFileName>
                            <outputDirectory>${project.basedir}/src/main/resources/public/redoc</outputDirectory>
                        </configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<!--
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.14.2</version>
				<configuration>
				  <images>
					<image>
					  <name>${docker.image}</name>
					  <build>
						<from>anapsix/alpine-java:8</from>
						<volumes>
						  <volume>/tmp</volume>
						</volumes>
						<entryPoint>
						  <exec>
							<arg>java</arg>
							<arg>-jar</arg>
							<arg>/maven/demo.jar</arg>
						  </exec>
						</entryPoint>
						<assembly>
						  <descriptor>assembly.xml</descriptor>
						</assembly>
					  </build>
					</image>
				  </images>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>
	<profiles>
	    <profile>
	      <id>dev</id>
	      <activation>
	        <activeByDefault>true</activeByDefault>
	      </activation>
	      
	      <dependencies>
	        <!-- 
	        <dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			</dependency>
	        
	        <dependency>
	          <groupId>com.h2database</groupId>
	          <artifactId>h2</artifactId>
	          <scope>runtime</scope>
	        </dependency>
	         -->
	      </dependencies>
	    </profile>
		<profile>
	      <id>openshift</id>
	      <dependencies>
	        <dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			</dependency>
			<dependency>
		      <groupId>org.springframework.cloud</groupId>
		      <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
		    </dependency>
          </dependencies>
	      <build>
	        <plugins>
	          <plugin>
	            <groupId>io.fabric8</groupId>
	            <artifactId>fabric8-maven-plugin</artifactId>
	            <version>${fabric8-maven-plugin.version}</version>
	            <executions>
	              <execution>
	                <id>fmp</id>
	                <goals>
	                  <goal>resource</goal>
	                  <goal>build</goal>
	                </goals>
	              </execution>
	            </executions>
	          </plugin>
	        </plugins>
	      </build>
	    </profile>
    </profiles>
</project>
