<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>wcm-authoring-server-demo</artifactId>
	<packaging>jar</packaging>
	<name>wcm-authoring-server-demo</name>
	<description>Spring Boot Modeshape</description>

	<parent>
	    <groupId>com.bpwizard.wcm-bpm</groupId>
	    <artifactId>modeshape-boot</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath/>
	</parent>
	<properties>
	  <!-- <jgroups.version>4.1.8.Final</jgroups.version>  -->
	  <jgroups.version>3.6.10.Final</jgroups.version>
	  <jgroups-raft.version>0.5.1.Final</jgroups-raft.version>
    <commons-cli.version>1.4</commons-cli.version>
    <opentracing-spring-jaeger-cloud.version>2.0.3</opentracing-spring-jaeger-cloud.version>
    <swagger-rest-locations>com.bpwizard.wcm.repo</swagger-rest-locations>
		<swagger-host>localhost:28080</swagger-host>
	</properties>
	<dependencies>
        <dependency>
			<groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>wcm-boot-autoconfigure</artifactId>
			<version>${project.version}</version>
		</dependency>
		 <dependency>
			<groupId>com.bpwizard.spring</groupId>
			<artifactId>spring-boot-commons-service</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
		    <groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>modeshape-commons-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.bpwizard.wcm-bpm</groupId>
			<artifactId>modeshape-jcr-rest-boot</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency>	
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<version>${atomikos.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>		
		<dependency>
		  <groupId>com.fasterxml.jackson.datatype</groupId>
		  <artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		 <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
       
		<dependency>
		    <groupId>org.hibernate.validator</groupId>
		    <artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<version>${atomikos.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.experimental</groupId>
			<artifactId>tomcat-embed-programmatic</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		-->
		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
		<!-- modeshape dependencies -->
		<!-- 
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-sequencer-images</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-persistence-relational</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-elasticsearch-index-provider</artifactId>
			<version>${modeshape.version}</version>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
	        <artifactId>modeshape-extractor-tika</artifactId>
        </dependency>
        -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>com.github.ulisesbocchio</groupId>
		    <artifactId>jasypt-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        
		<!-- Spring cloud kubernets/openshift starter -->
		<!-- 
	    <dependency>
	      <groupId>org.springframework.cloud</groupId>
	      <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
	    </dependency>
	     -->
		<!-- Jaegers opentracing -->
		<!-- 
		     Turned off Jaegers for now. It messed up javax.transaction.TransactionManager that is used by modeshape 
		     and org.springframework.transaction.PlatformTransactionManager that is used by camunda
		<dependency>
		  <groupId>io.opentracing.contrib</groupId>
		  <artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>
		  <version>${opentracing-spring-jaeger-cloud.version}</version>
		</dependency>
		 -->
		<!-- prometheus monitoring -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- Micormeter core dependecy  -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-core</artifactId>
		</dependency>
		
		<dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
		<!-- ignite caching -->
		<!--  
		<dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-core</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-spring</artifactId>
        </dependency>        
        <dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-slf4j</artifactId>
		</dependency>
		<dependency>
            <groupId>com.bpwizard.spring</groupId>
            <artifactId>spring-boot-ignite</artifactId>
            <version>${project.version}</version>
        </dependency>
        -->
        <!-- 
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.197</version>
        </dependency>
         -->
        <!--
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-indexing</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
			<groupId>org.mybatis.caches</groupId>
			<artifactId>mybatis-ignite</artifactId>
		</dependency>
		-->
        <!-- 
        <dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-hibernate_5.3</artifactId>
		</dependency>
		<dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-rest-http</artifactId>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>		
		<dependency>
		    <groupId>org.apache.ignite</groupId>
		    <artifactId>ignite-spring-data</artifactId>
		</dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>
        -->
	</dependencies>

	<build>
	    <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>
		<plugins>
		    <!-- default migration table: flyway_schema_history
		    6 Commands: info, migrate, baseline, validate, repair, clean
		    mvn clean flyway:migrate -Dflyway.configFile=flywayConfig.properties 
		    mvn flyway:info -Dflyway.configFile=flywayConfig.properties 
		    -->
		    <!--
		    <plugin>
			    <groupId>org.flywaydb</groupId>
			    <artifactId>flyway-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<!-- 
			<plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.5.1-1:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.18.0:exe:${os.detected.classifier}</pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
			<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
        			<executable>true</executable>
    		    </configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Download redoc (enable it when building for production) -->
 			<!--
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
				       	        <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://rebilly.github.io/ReDoc/releases/latest/redoc.min.js</url>
                            <outputFileName>redoc.min.js</outputFileName>
                            <outputDirectory>${project.basedir}/src/main/resources/public/redoc</outputDirectory>
                        </configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<!--
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.14.2</version>
				<configuration>
				  <images>
					<image>
					  <name>${docker.image}</name>
					  <build>
						<from>anapsix/alpine-java:8</from>
						<volumes>
						  <volume>/tmp</volume>
						</volumes>
						<entryPoint>
						  <exec>
							<arg>java</arg>
							<arg>-jar</arg>
							<arg>/maven/demo.jar</arg>
						  </exec>
						</entryPoint>
						<assembly>
						  <descriptor>assembly.xml</descriptor>
						</assembly>
					  </build>
					</image>
				  </images>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>
	<profiles>
	    <profile>
			<id>h2</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
            <dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<scope>runtime</scope>
				</dependency>
            </dependencies>
		</profile>	
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
            <dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
            </dependencies>
		</profile>	
	    <!-- profile for cloudformation -->
	    <profile>
	      <id>cloudformation</id>
	      <activation>
	        <activeByDefault>false</activeByDefault>
	      </activation>
	      <!-- 
	      <dependencies>
	        <dependency>
	          <groupId>com.h2database</groupId>
	          <artifactId>h2</artifactId>
	        </dependency>
	      </dependencies>
	       -->
	    </profile>
	    <!-- profile for aws beanstalk -->
	    <profile>
	      <id>beanstalk</id>
	      <activation>
	        <activeByDefault>false</activeByDefault>
	      </activation>
	      <!-- 
	      <dependencies>
	        <dependency>
	          <groupId>com.h2database</groupId>
	          <artifactId>h2</artifactId>
	        </dependency>
	      </dependencies>
	       -->
	    </profile>
	    <profile>
	      <id>dev</id>
	      <activation>
	        <activeByDefault>false</activeByDefault>
	      </activation>
	 
	      <!-- 
	      <dependencies>
	        <dependency>
	          <groupId>com.h2database</groupId>
	          <artifactId>h2</artifactId>
	          <scope>test</scope>
	        </dependency>
	        <dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			</dependency>
	      </dependencies>
	      -->     
	    </profile>
		<profile>
	      <id>openshift</id>
	      <activation>
	        <activeByDefault>false</activeByDefault>
	      </activation>
	      <properties>
	        <openjdk18-openshift.version>1.3</openjdk18-openshift.version>
	        <fabric8-maven-plugin.version>4.3.1</fabric8-maven-plugin.version>         
            <!-- <fabric8-maven-plugin.version>3.5.40</fabric8-maven-plugin.version>  -->
		    <fabric8.openshift.trimImageInContainerSpec>true</fabric8.openshift.trimImageInContainerSpec>
		    <fabric8.skip.build.pom>true</fabric8.skip.build.pom>	
		    <!-- 
		    <fabric8.generator.from>
		      registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift:${openjdk18-openshift.version}
		    </fabric8.generator.from>
		    -->	
		     
		    <fabric8.generator.from>
		      registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
		    </fabric8.generator.from>
		    			    
          </properties>
	      
	      <dependencies>	
	        <!--         
	        <dependency>
	          <groupId>com.h2database</groupId>
	          <artifactId>h2</artifactId>
	          <scope>test</scope>
	        </dependency>
	        <dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			</dependency>
			 -->
			<dependency>
		      <groupId>org.springframework.cloud</groupId>
		      <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
		    </dependency>
          </dependencies>
          <build>
	        <plugins>
	          <plugin>
	            <groupId>io.fabric8</groupId>
	            <artifactId>fabric8-maven-plugin</artifactId>
	            <version>${fabric8-maven-plugin.version}</version>
	            <executions>
	              <execution>
	                <id>fmp</id>
	                <goals>
	                  <goal>resource</goal>
	                  <goal>build</goal>
	                </goals>
	              </execution>
	            </executions>
	          </plugin>
	        </plugins>
	      </build>
	    </profile>
		<profile>
    		<!-- docker run -p 8080:8080 hello-kogito:1.0-SNAPSHOT -->
	  		<id>native-docker</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.experimental</groupId>
					<artifactId>spring-graalvm-native</artifactId>
					<version>0.9.0-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_BOOT_NATIVE_IMAGE>1</BP_BOOT_NATIVE_IMAGE>
							<BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
							-Dspring.native.remove-yaml-support=true
							-Dspring.spel.ignore=true
							</BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
						</env>
						</image>
					</configuration>
				</plugin>
			</plugins>
			</build>
		</profile>
		<profile>
			<id>native-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.nativeimage</groupId>
						<artifactId>native-image-maven-plugin</artifactId>
						<version>20.3.0</version>
						<configuration>
							<mainClass>com.bpwizard.bpm.BpmApplication</mainClass>
							<buildArgs>-Dspring.native.remove-yaml-support=true -Dspring.spel.ignore=true</buildArgs>
						</configuration>
						<executions>
							<execution>
							<goals>
								<goal>native-image</goal>
							</goals>
							<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
    </profiles>
</project>